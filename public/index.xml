<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>CanftIn&#39;s Blog</title>
    <link>https://canftin.github.io/</link>
    <description>Recent content on CanftIn&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language><atom:link href="https://canftin.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>从零构造现代语言编译器(6): Parse节点和状态</title>
      <link>https://canftin.github.io/posts/tech/p7_compiler_build_6_parse_node_state/</link>
      <pubDate>Tue, 03 Oct 2023 10:32:32 +0800</pubDate>
      
      <guid>https://canftin.github.io/posts/tech/p7_compiler_build_6_parse_node_state/</guid>
      <description></description>
    </item>
    
    <item>
      <title>从零构造现代语言编译器(5): 缓冲区</title>
      <link>https://canftin.github.io/posts/tech/p6_compiler_build_5_source_buffer/</link>
      <pubDate>Tue, 26 Sep 2023 18:28:05 +0800</pubDate>
      
      <guid>https://canftin.github.io/posts/tech/p6_compiler_build_5_source_buffer/</guid>
      <description>// TODO: 1. 分析老版本mmap的SourceBuffer。 // TODO: 2. 分vfs版本SourceBuffer。 // TODO: 3. 分析swift版本source mana</description>
    </item>
    
    <item>
      <title>从零构造现代语言编译器(4): 语言设计</title>
      <link>https://canftin.github.io/posts/tech/p5_compiler_build_4_lang_design/</link>
      <pubDate>Tue, 26 Sep 2023 15:34:28 +0800</pubDate>
      
      <guid>https://canftin.github.io/posts/tech/p5_compiler_build_4_lang_design/</guid>
      <description>1. 注释 在现有的编程语言中，注释有多种用途。主要的用例包括： 文档：为API的用户和未来的维护者提供人类可读的注释，解释其功能以及如何使用它。这</description>
    </item>
    
    <item>
      <title>从零构造现代语言编译器(3): 诊断信息</title>
      <link>https://canftin.github.io/posts/tech/p4_compiler_build_3_diagnostics/</link>
      <pubDate>Mon, 25 Sep 2023 15:30:08 +0800</pubDate>
      
      <guid>https://canftin.github.io/posts/tech/p4_compiler_build_3_diagnostics/</guid>
      <description>1. 什么是诊断 诊断信息（Diagnostics）在编程语言中，通常是编译器用来告诉程序员源代码中存在的问题的消息。这些问题可能包括语法错误、类</description>
    </item>
    
    <item>
      <title>从零构造现代语言编译器(2): 公共库</title>
      <link>https://canftin.github.io/posts/tech/p3_compiler_build_2_common_lib/</link>
      <pubDate>Thu, 21 Sep 2023 18:05:39 +0800</pubDate>
      
      <guid>https://canftin.github.io/posts/tech/p3_compiler_build_2_common_lib/</guid>
      <description>本章主要介绍公共库里的基础组件，这些组件抽象出来用于统一编程方式，达到可复用性，其中有一些重复造轮子的组件，这里也对这些组件和现有开源组件做</description>
    </item>
    
    <item>
      <title>从零构造现代语言编译器(1): 词法分析</title>
      <link>https://canftin.github.io/posts/tech/p2_compiler_build_1_lexer/</link>
      <pubDate>Thu, 21 Sep 2023 14:51:58 +0800</pubDate>
      
      <guid>https://canftin.github.io/posts/tech/p2_compiler_build_1_lexer/</guid>
      <description>1. 什么是数值字面量 数值字面量（Numeric Literals）在编程中是表示特定数值的一个符号或一组符号。这些字面量用于直接在源代码中表示一</description>
    </item>
    
    <item>
      <title>从零构造现代语言编译器(0): 开始</title>
      <link>https://canftin.github.io/posts/tech/p1_compiler_build_0_start/</link>
      <pubDate>Thu, 21 Sep 2023 12:33:27 +0800</pubDate>
      
      <guid>https://canftin.github.io/posts/tech/p1_compiler_build_0_start/</guid>
      <description>carbon-lang介绍 Carbon作为一个实验性的通用编程语言，旨在成为“C++的后继语言”[1]，目前仍在Google的项目孵化期中，</description>
    </item>
    
    <item>
      <title>重启博客</title>
      <link>https://canftin.github.io/posts/tech/p0_restart_blog/</link>
      <pubDate>Wed, 20 Sep 2023 15:06:10 +0800</pubDate>
      
      <guid>https://canftin.github.io/posts/tech/p0_restart_blog/</guid>
      <description>这个博客从16年开始就在尝试用各种前端构建，期间也经历了WordPress、hexo等工具的使用，一直没有产出多少实质性的文章，虽然这么多年</description>
    </item>
    
    <item>
      <title>关于我</title>
      <link>https://canftin.github.io/about/</link>
      <pubDate>Wed, 20 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>https://canftin.github.io/about/</guid>
      <description>自我简介</description>
    </item>
    
    
    
  </channel>
</rss>
