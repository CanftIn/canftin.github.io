<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>技术 on CanftIn&#39;s Blog</title>
    <link>https://canftin.github.io/posts/tech/</link>
    <description>Recent content in 技术 on CanftIn&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language><atom:link href="https://canftin.github.io/posts/tech/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LLVM源码分析系列(0): formatv</title>
      <link>https://canftin.github.io/posts/tech/p10_llvm_analysis_0_formatv/</link>
      <pubDate>Tue, 10 Oct 2023 16:03:07 +0800</pubDate>
      
      <guid>https://canftin.github.io/posts/tech/p10_llvm_analysis_0_formatv/</guid>
      <description>这篇文章作为LLVM源码分析系列的开篇，初步介绍LLVM中format的相关机制和原理，format在LLVM中较为容易理解，从这里启航，后</description>
    </item>
    
    <item>
      <title>从零构造现代语言编译器(8): 解析树</title>
      <link>https://canftin.github.io/posts/tech/p9_compiler_build_8_parse_tree/</link>
      <pubDate>Sat, 07 Oct 2023 11:34:56 +0800</pubDate>
      
      <guid>https://canftin.github.io/posts/tech/p9_compiler_build_8_parse_tree/</guid>
      <description>为什么不直接在tree中放NodeImpl*指针，NodeImpl指向自己的其他结点，而要用smallvector记录索引的方式，两者相比后</description>
    </item>
    
    <item>
      <title>从零构造现代语言编译器(7): Parse优先级</title>
      <link>https://canftin.github.io/posts/tech/p8_compiler_build_7_parse_precedence/</link>
      <pubDate>Tue, 03 Oct 2023 11:20:53 +0800</pubDate>
      
      <guid>https://canftin.github.io/posts/tech/p8_compiler_build_7_parse_precedence/</guid>
      <description>表达式 目录 表达式 目录 概述 优先级 名称 非限定名称 限定名称和成员访问 操作符 转换和类型转换 if 表达式 数值类型文字表达式 考虑的替代方案 参考文献 概述 表达式</description>
    </item>
    
    <item>
      <title>从零构造现代语言编译器(6): Parse节点和状态</title>
      <link>https://canftin.github.io/posts/tech/p7_compiler_build_6_parse_node_state/</link>
      <pubDate>Tue, 03 Oct 2023 10:32:32 +0800</pubDate>
      
      <guid>https://canftin.github.io/posts/tech/p7_compiler_build_6_parse_node_state/</guid>
      <description>1. 节点类型 2. 解析状态 这些状态代表了解析器在处理输入代码时可能遇到的各种情况。以下是对这些状态的详细解释： IndexExpression：处理</description>
    </item>
    
    <item>
      <title>从零构造现代语言编译器(5): 缓冲区</title>
      <link>https://canftin.github.io/posts/tech/p6_compiler_build_5_source_buffer/</link>
      <pubDate>Tue, 26 Sep 2023 18:28:05 +0800</pubDate>
      
      <guid>https://canftin.github.io/posts/tech/p6_compiler_build_5_source_buffer/</guid>
      <description>// TODO: 1. 分析老版本mmap的SourceBuffer。 // TODO: 2. 分vfs版本SourceBuffer。 // TODO: 3. 分析swift版本source mana</description>
    </item>
    
    <item>
      <title>从零构造现代语言编译器(4): 语言设计</title>
      <link>https://canftin.github.io/posts/tech/p5_compiler_build_4_lang_design/</link>
      <pubDate>Tue, 26 Sep 2023 15:34:28 +0800</pubDate>
      
      <guid>https://canftin.github.io/posts/tech/p5_compiler_build_4_lang_design/</guid>
      <description>1. 注释 在现有的编程语言中，注释有多种用途。主要的用例包括： 文档：为API的用户和未来的维护者提供人类可读的注释，解释其功能以及如何使用它。这</description>
    </item>
    
    <item>
      <title>从零构造现代语言编译器(3): 诊断信息</title>
      <link>https://canftin.github.io/posts/tech/p4_compiler_build_3_diagnostics/</link>
      <pubDate>Mon, 25 Sep 2023 15:30:08 +0800</pubDate>
      
      <guid>https://canftin.github.io/posts/tech/p4_compiler_build_3_diagnostics/</guid>
      <description>1. 什么是诊断 诊断信息（Diagnostics）在编程语言中，通常是编译器用来告诉程序员源代码中存在的问题的消息。这些问题可能包括语法错误、类</description>
    </item>
    
    <item>
      <title>从零构造现代语言编译器(2): 公共库</title>
      <link>https://canftin.github.io/posts/tech/p3_compiler_build_2_common_lib/</link>
      <pubDate>Thu, 21 Sep 2023 18:05:39 +0800</pubDate>
      
      <guid>https://canftin.github.io/posts/tech/p3_compiler_build_2_common_lib/</guid>
      <description>本章主要介绍公共库里的基础组件，这些组件抽象出来用于统一编程方式，达到可复用性，其中有一些重复造轮子的组件，这里也对这些组件和现有开源组件做</description>
    </item>
    
    <item>
      <title>从零构造现代语言编译器(1): 词法分析</title>
      <link>https://canftin.github.io/posts/tech/p2_compiler_build_1_lexer/</link>
      <pubDate>Thu, 21 Sep 2023 14:51:58 +0800</pubDate>
      
      <guid>https://canftin.github.io/posts/tech/p2_compiler_build_1_lexer/</guid>
      <description>1. 什么是数值字面量 数值字面量（Numeric Literals）在编程中是表示特定数值的一个符号或一组符号。这些字面量用于直接在源代码中表示一</description>
    </item>
    
    <item>
      <title>从零构造现代语言编译器(0): C&#43;&#43;后继语言</title>
      <link>https://canftin.github.io/posts/tech/p1_compiler_build_0_start/</link>
      <pubDate>Thu, 21 Sep 2023 12:33:27 +0800</pubDate>
      
      <guid>https://canftin.github.io/posts/tech/p1_compiler_build_0_start/</guid>
      <description>1. carbon-lang介绍 自去年（2020.7）Chandler Carruth 作为 Google 的 tech leader 官方宣布 Carbon 语言，这个项目在 github 上热度一度飙升，至今已有30k+</description>
    </item>
    
    <item>
      <title>重启博客</title>
      <link>https://canftin.github.io/posts/tech/p0_restart_blog/</link>
      <pubDate>Wed, 20 Sep 2023 15:06:10 +0800</pubDate>
      
      <guid>https://canftin.github.io/posts/tech/p0_restart_blog/</guid>
      <description>这个博客从16年开始就在尝试用各种前端构建，期间也经历了WordPress、hexo等工具的使用，一直没有产出多少实质性的文章，虽然这么多年</description>
    </item>
    
  </channel>
</rss>
