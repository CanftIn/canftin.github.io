"use strict";function RigidShape(t,i,e,s){this.mCenter=t,this.mInertia=0,this.mInvMass=void 0!==i?i:1,this.mFriction=void 0!==e?e:.8,this.mRestitution=void 0!==s?s:.2,this.mVelocity=new Vec2(0,0),0!==this.mInvMass?(this.mInvMass=1/this.mInvMass,this.mAcceleration=gEngine.Core.mGravity):this.mAcceleration=new Vec2(0,0),this.mAngle=0,this.mAngularVelocity=0,this.mAngularAcceleration=0,this.mBoundRadius=0,gEngine.Core.mAllObjects.push(this)}RigidShape.prototype.updateMass=function(t){var i;i=0!==this.mInvMass?1/this.mInvMass:0,(i+=t)<=0?(this.mInvMass=0,this.mVelocity=new Vec2(0,0),this.mAcceleration=new Vec2(0,0),this.mAngularVelocity=0,this.mAngularAcceleration=0):(this.mInvMass=1/i,this.mAcceleration=gEngine.Core.mGravity),this.updateInertia()},RigidShape.prototype.updateInertia=function(){},RigidShape.prototype.update=function(){if(gEngine.Core.mMovement){var t=gEngine.Core.mUpdateIntervalInSeconds;this.mVelocity=this.mVelocity.add(this.mAcceleration.scale(t)),this.move(this.mVelocity.scale(t)),this.mAngularVelocity+=this.mAngularAcceleration*t,this.rotate(this.mAngularVelocity*t)}},RigidShape.prototype.boundTest=function(t){var i=t.mCenter.subtract(this.mCenter);return!(this.mBoundRadius+t.mBoundRadius<i.length())};